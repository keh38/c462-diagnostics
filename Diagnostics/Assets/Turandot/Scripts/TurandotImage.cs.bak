using UnityEngine;
using System.Collections;

using Turandot.Cues;

namespace Turandot.Scripts
{
    public class TurandotImage : MonoBehaviour
    {
        public GameObject frame;

        private Image _image;

        public void Initialize() { }

        public void Activate(Image image)
        {
            _image = image;

            if (!_image.startVisible || string.IsNullOrEmpty(image.filename))
                return;

            string pp = KLib.FileIO.CombinePaths(DataFileLocations.LocalResourceFolder("Images"), System.IO.Path.GetFileName(image.filename));
#if UNITY_EDITOR
            pp = @"C:\" + pp;
#endif

            WWW www = new WWW("file://" + pp.Replace(@"\", "/"));
            while (!www.isDone && www.error == null) { }

            frame.GetComponent<Renderer>().material.mainTexture = www.texture;

            Vector3[] vnorm = new Vector3[4];
            vnorm[0] = new Vector3(0f, 0f, 0);
            vnorm[1] = new Vector3(0f, 1, 0);
            vnorm[2] = new Vector3(1, 1, 0);
            vnorm[3] = new Vector3(1, 0f, 0);

            Mesh mesh = KLib.Polygon.GeneratePolygonalMesh(vnorm);

            Vector3[] v = new Vector3[mesh.vertexCount];
            Vector2[] uv = new Vector2[mesh.vertexCount];

            for (int k = 0; k < mesh.vertexCount; k++)
            {
                v[k] = mesh.vertices[k];
                if (v[k].z > 0)
                {
                    uv[k] = new Vector2(v[k].x, v[k].y);
                }
                else
                {
                    uv[k] = new Vector2(-1, -1);
                }
                v[k].x = www.texture.width * (mesh.vertices[k].x - 0.5f);
                v[k].y = www.texture.height * (mesh.vertices[k].y - 0.5f);
                v[k].z = 0.05f * mesh.vertices[k].z;
            }

            mesh.vertices = v;
            mesh.uv = uv;
            mesh.RecalculateNormals();
            mesh.RecalculateBounds();

            int x = image.X;
            if (image.horizontalAlignment == Image.HorizontalAlignment.Left)
                x += www.texture.width / 2;
            else if (image.horizontalAlignment == Image.HorizontalAlignment.Right)
                x -= www.texture.width / 2;

            int y = image.Y;
            if (image.verticalAlignment == Image.VerticalAlignment.Top)
                y -= www.texture.height / 2;
            else if (image.verticalAlignment == Image.VerticalAlignment.Bottom)
                y += www.texture.height / 2;

            transform.localPosition = new Vector2(x, y);
        }

        public void Deactivate()
        {
            if (_image != null && _image.endVisible)
            {

            }
            else
            {
                HideCue();
            }
        }

        public void HideCue()
        {
            transform.localPosition = new Vector2(-2500, 0);
        }

    }
}