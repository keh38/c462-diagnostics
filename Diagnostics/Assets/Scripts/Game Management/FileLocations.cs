using UnityEngine;
using System.IO;

using KLib;

/// <summary>
/// Centralized place to specify the locations for the various data files generated by the game.
/// </summary>
public static class FileLocations
{
    private static string _currentID = "";
    private static string _currentProject = "";
    private static string _docFolder = Application.persistentDataPath;
    private static readonly string _dataRoot = _docFolder;// + "/EPL/Training";

    public static string SubjectFolder { get; private set; } = "";
    public static string ProjectFolder { get; private set; } = "";

    public static void SetID(string project, string id)
    {
        _currentID = id;
        _currentProject = project;

        ProjectFolder = FileIO.CombinePaths(_dataRoot, "Projects", project);
        if (!Directory.Exists(ProjectFolder))
        {
            Directory.CreateDirectory(ProjectFolder);
            Debug.Log($"Created project folder {ProjectFolder}");
        }

        SubjectFolder = FileIO.CombinePaths(ProjectFolder, "Subjects", id);
        if (!Directory.Exists(SubjectFolder))
        {
            Directory.CreateDirectory(SubjectFolder);
            Debug.Log($"Created subject folder {SubjectFolder}");
        }
    }

    public static bool DoesSubjectExist(string project, string id)
    {
        var folder = FileIO.CombinePaths(_dataRoot, project, "Subjects", id);
        return Directory.Exists(folder);
    }

    public static string RemoteRoot
    {
        get { return "Training"; }
    }

    public static string RemoteFolder(string project)
    {
        return project;
    }

    public static string LocalResourceFolder(string resourceType)
    {
        return FileIO.CombinePaths(ProjectFolder, "Resources", resourceType);
    }
    public static string LocalResourceFolder(string project, string resourceType)
    {
        return FileIO.CombinePaths(_dataRoot, project, "Resources", resourceType);
    }
    public static string RemoteResourceFolder(string project, string resourceType)
    {
        return FileLocations.RemoteFolder(project) + "/Resources/" + resourceType + "/";
    }
    public static string RemoteUploadFolder
    {
        get
        {
            return FileLocations.RemoteFolder(_currentProject) + "/New/";
        }
    }

    public static string ConfigFile(string name)
    {
        return FileIO.CombinePaths(ProjectFolder, "Resources", "Config Files", name + ".xml");
    }

    public static string ConfigFile(string type, string name)
    {
        return FileIO.CombinePaths(ProjectFolder, "Resources", "Config Files", type + "." + name + ".xml");
    }

    public static string StateFile
    {
        get { return Path.Combine(_dataRoot, "state.xml"); }
    }

    public static string UploadLog
    {
        get { return Path.Combine(_dataRoot, "upload.log"); }
    }

    public static string ProjectMetadata(string project)
    {
        return FileIO.CombinePaths(_dataRoot, project, "pmd.bin");
    }

    public static string TinnitusMatchHistoryFile { get { return FileIO.CombinePaths(SubjectFolder, "meta", "tmh.json"); } }

    // Paths to project manager file
    public static string ProjectStatePath { get { return FileIO.CombinePaths(SubjectFolder, "meta", "ps.json"); } }

    // Paths to subject manager files
    public static string SubjectMetaFolder { get { return SubjectFolder + "/meta"; } }
    public static string SubjectMetadataPath { get { return SubjectFolder + "/meta/gm.json"; } }
    public static string SubjectCustomSpeechPath { get { return SubjectFolder + "/meta/speech.xml"; } }

    // Paths to audiogram files
    public static string AudiogramPath { get { return SubjectFolder + "/meta/agram.xml"; } }
    public static string LDLPath { get { return SubjectFolder + "/meta/ldlgram.xml"; } }

    // Speech test wav file folder
    public static readonly string BasicResourcesFolder = @"C:\Users\Public\Music\{4CF46EAB-0304-4429-9666-035ADFDB847F}\{18AE38D6-5684-4966-9047-C49547486142}";

    // Speech test wav file folder
    public static readonly string SpeechWavFolder = @"C:/Users/Public/Music/{4CF46EAB-0304-4429-9666-035ADFDB847F}/{26766E8C-CF81-47D3-A998-C974848F67C0}";

    // User wav file folder
    public static readonly string UserWavFolder = @"C:/Users/Public/Music/{4CF46EAB-0304-4429-9666-035ADFDB847F}/{9a91fca2-bfe1-4f26-92e7-559f7cc80268}";
    
    // Temporary setup files
    public static readonly string TempSetupDataPath = System.IO.Path.Combine(Application.temporaryCachePath, "su.bin");
    public static readonly string SubjectRegisterPath = System.IO.Path.Combine(Application.temporaryCachePath, "sr.bin");
}
