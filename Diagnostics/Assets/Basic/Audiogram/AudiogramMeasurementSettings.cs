using System;
using System.ComponentModel;

using KLib;
using KLib.Signals.Enumerations;

namespace Audiograms
{
    [Serializable]
    public class AudiogramMeasurementSettings : BasicMeasurementConfiguration
    {
        public AudiogramMeasurementSettings()
        {
            Name = "Defaults";
            //Laterality = Laterality.Unspecified;
            Merge = false;
            Ramp = 25f;
            ToneDuration = 1000f;
            NumPips = 1;
            ISI_ms = 0;
            MaxMaskerSPL = 80f;
            MinValidResponseTime = 0.18f;
            MaxValidResponseTime = 2.5f;
            TrackInSPL = false;
        }

        public float minISI_s = 3;
        public float maxISI_s = 7;
        private float _maxMaskerSPL = 80f;

        public float[] testFreqs = { 750, 1000, 1500, 2000, 3000, 4000, 8000, 125, 250, 500 };

        //[DefaultValue(Laterality.Unspecified)]
        //[Description("Ears to test. \"Unspecified\" uses the project default.")]
        //public Laterality Laterality { set; get; }

        [Category("Bookkeeping")]
        [Description("Merge data generated by this audiogram with the existing data on the tablet.")]
        public bool Merge { set; get; }

        //[DefaultValue(25f)]
        //[Description("Ramp applied to tones (ms).")]
        public float Ramp { set; get; }

        //[DefaultValue(1000f)]
        //[Description("Duration of tone (ms).")]
        public float ToneDuration { set; get; }

        public float ISI_ms { set; get; }
        public int NumPips { set; get;  }

        //[Description("Duration of tone (ms).")]
        public float MinValidResponseTime { set; get; }
        public float MaxValidResponseTime { set; get; }

        //[DefaultValue(80f)]
        //[Description("Maximum intensity of masker noise.")]
        public float MaxMaskerSPL { set; get; }

        public bool TrackInSPL = false;
    }
}
